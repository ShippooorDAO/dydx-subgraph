type User @entity {
  "ID attribute is user public key"
  id: ID!
  totalTokens: BigInt!
  totalStakedTokens: BigInt!
  votingPower: BigInt!
  proposingPower: BigInt!
  tokenVotingPower: BigInt!
  tokenProposingPower: BigInt!
  stakedTokenVotingPower: BigInt!
  stakedTokenProposingPower: BigInt!
}

type Proposal @entity {
  "ID attribute is proposal ID"
  id: ID!
}

type ProposalVote @entity {
  "ID attribute is a function of user ID and proposal ID, e.g. {user.id}-{proposal.id}"
  id: ID!
  proposal: Proposal!
  user: User!
  support: Boolean!
  votingPower: BigInt!
}

type RewardsClaimed @entity {
  "ID attribute is a function of user ID and rewards claim number at the time of claiming, e.g. {user.id}-{incentivesModule}-{claimTimestamp}"
  id: ID!
  user: User!
  incentivesModule: IncentivesModule!
  claimTimestamp: BigInt!
  rewards: BigInt!
}

enum IncentivesModule {
  MerkleDistributor
  SafetyModule
  LiquidityStaking
}

type HourlydYdXTokenExchangeRate @entity {
  "ID attribute of the exchange rate entry {timestamp_hour_zero}"
  id: ID!
  "DYDX/USDC exchange rate"
  exchangeRateUSDC: BigDecimal!
  timestamp: Int!
  blockNumber: Int!
}

interface TreasuryTransaction {
  id: ID!
  to: Bytes!
  from: Bytes!
  amount: BigInt!
  amountUSD: BigDecimal!
  timestamp: BigInt!
  blockNumber: BigInt!
  blockHash: Bytes!
  transactionHash: Bytes!
  currencySymbol: String!
}

type CommunityTreasuryTransaction implements TreasuryTransaction @entity {
  id: ID!
  to: Bytes!
  from: Bytes!
  amount: BigInt!
  amountUSD: BigDecimal!
  timestamp: BigInt!
  blockNumber: BigInt!
  blockHash: Bytes!
  transactionHash: Bytes!
  currencySymbol: String!
}

type GrantsProgramTreasuryTransaction implements TreasuryTransaction @entity {
  id: ID!
  to: Bytes!
  from: Bytes!
  amount: BigInt!
  amountUSD: BigDecimal!
  timestamp: BigInt!
  blockNumber: BigInt!
  blockHash: Bytes!
  transactionHash: Bytes!
  currencySymbol: String!
}

type CurrentDYDXPrice @entity {
  "hardcoded to dydx"
  id: ID!
  value: BigDecimal!
}

type Balance @entity {
  "contract address"
  id: ID!
  dydxBalance: BigInt!
  usdcBalance: BigInt!
}

type HistoricalBalance @entity {
  "{contract address}-{tx hash}"
  id: ID!
  contract: Bytes!
  timestamp: BigInt!
  transactionHash: Bytes!
  dydxBalance: BigInt!
  usdcBalance: BigInt!
}

